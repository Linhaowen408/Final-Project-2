import turtle
import time
import random

Screen_width = 600
Screen_height = 600
Delay = 0.1 
Segment_size = 20

screen = turtle.Screen()
screen.title("Snake Game")
screen.bgcolor("lightyellow")
screen.setup(width = Screen_width, height = Screen_height)
screen.tracer(0)

snake_head = turtle.Turtle()
snake_head.shape("turtle")
snake_head.color("darkgreen")
snake_head.penup()
snake_head.goto(0, 0)
snake_head.direction = "stop"

food = turtle.Turtle()
food.shape("circle")
food.color("red")
food.penup()
food.goto(0, 100)

segments = []

score = 0
high_score = 0

score_display = turtle.Turtle()
score_display.speed(0)
score_display.color("black")
score_display.penup()
score_display.hideturtle()
score_display.goto(0, Screen_height // 2 - 40)
score_display.write("Score: 0  High Score: 0", align="center", font=("Courier", 24, "normal"))

game_over_display = turtle.Turtle()
game_over_display.speed(0)
game_over_display.color("darkred")
game_over_display.penup()
game_over_display.hideturtle()

instructions_display = turtle.Turtle()
instructions_display.speed(0)
instructions_display.color("black")
instructions_display.penup()
instructions_display.hideturtle()

def show_game_over():
    game_over_display.goto(0, 0)
    game_over_display.write("GAME OVER", align="center", font=("Courier", 36, "bold"))
    instructions_display.goto(0, -50)
    instructions_display.write("Press Space to Restart", align="center", font=("Courier", 24, "normal"))
    screen.update()

def hide_game_over():
    game_over_display.clear()
    instructions_display.clear()

def show_instructions():
    instructions_display.goto(0, 50)
    instructions_display.write("Press Space to Start", align="center", font=("Courier", 24, "normal"))

def hide_instructions():
    instructions_display.clear()

def move_up():
    if snake_head.direction != "down":
        snake_head.direction = "up"

def move_down():
    if snake_head.direction != "up":
        snake_head.direction = "down"

def move_left():
    if snake_head.direction != "right":
        snake_head.direction = "left"

def move_right():
    if snake_head.direction != "left":
        snake_head.direction = "right"

def move():
    if snake_head.direction == "up":
        snake_head.sety(snake_head.ycor() + Segment_size)
    elif snake_head.direction == "down":
        snake_head.sety(snake_head.ycor() - Segment_size)
    elif snake_head.direction == "left":
        snake_head.setx(snake_head.xcor() - Segment_size)
    elif snake_head.direction == "right":
        snake_head.setx(snake_head.xcor() + Segment_size)

def reset_game():
    hide_game_over()
    hide_instructions() 
    snake_head.goto(0, 0)
    snake_head.direction = "stop"

    for segment in segments:
        segment.goto(1000, 1000)
    segments.clear()

    global score
    score = 0
    score_display.clear()
    score_display.write(f"Score: {score}  High Score: {high_score}", align="center", font=("Courier", 24, "normal"))

    show_instructions()

def start_game():
    global game_started
    if not game_started:
        game_started = True
        reset_game()
        hide_instructions() 

screen.listen()
screen.onkeypress(move_up, "Up")
screen.onkeypress(move_down, "Down")
screen.onkeypress(move_left, "Left")
screen.onkeypress(move_right, "Right")
screen.onkeypress(start_game, "space")

game_started = False

show_instructions()

while True:
    screen.update()

    if not game_started:
        continue

    if (snake_head.xcor() > Screen_width // 2 - Segment_size or snake_head.xcor() < -Screen_width // 2 + Segment_size or
        snake_head.ycor() > Screen_height // 2 - Segment_size or snake_head.ycor() < -Screen_height // 2 + Segment_size):
        show_game_over()
        game_started = False
        continue

    if snake_head.distance(food) < Segment_size:
        x = random.randint(-Screen_width // 2 + Segment_size, Screen_width // 2 - Segment_size)
        y = random.randint(-Screen_height // 2 + Segment_size, Screen_height // 2 - Segment_size)
        food.goto(x, y)

        new_segment = turtle.Turtle()
        new_segment.shape("square")
        new_segment.color("green")
        new_segment.penup()
        segments.append(new_segment)

        score += 10
        if score > high_score:
            high_score = score

        score_display.clear()
        score_display.write(f"Score: {score}  High Score: {high_score}", align="center", font=("Courier", 24, "normal"))

    for i in range(len(segments) - 1, 0, -1):
        x = segments[i - 1].xcor()
        y = segments[i - 1].ycor()
        segments[i].goto(x, y)

    if segments:
        segments[0].goto(snake_head.xcor(), snake_head.ycor())

    move()

    for segment in segments:
        if segment.distance(snake_head) < Segment_size:
            show_game_over()
            game_started = False
            continue 

    time.sleep(Delay)

screen.mainloop()
